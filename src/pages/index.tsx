import Head from 'next/head';
import { useState, ChangeEvent } from 'react';

import { Footer } from '@/components/Footer';
import { Header } from '@/components/Header';
import { useFirebase } from '@/hooks/useFirebase';

export default function Home() {
    const { todoList, addNewTodo } = useFirebase('todoList');

    const [inputTodo, setInputTodo] = useState<string>('');

    const loading = !todoList && true;

    const addTodo = (title: string) => {
        addNewTodo({
            title: title,
            isDone: false,
        });
    };
    console.log(addTodo);

    return (
        <div>
            <Head>
                <title>Todo List</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Header />

            <main className="h-screen bg-gray-800 flex justify-center items-center flex-col">
                <div className="flex">
                    <input
                        type="text"
                        placeholder="TODOを入力"
                        className="border-4 placeholder-white"
                        value={inputTodo}
                        onChange={(e: ChangeEvent<HTMLInputElement>) => {
                            setInputTodo(e.target.value);
                        }}
                        onKeyDown={(e) => {
                            if (e.key === 'Enter' && inputTodo !== '') {
                                // TODO: firebase DBに追加
                                // addTodo('dummy2');
                            }
                        }}
                    />
                    <button
                        type="button"
                        className="w-8"
                        onClick={() => {
                            if (inputTodo === '') return;
                        }}
                    >
                        {'\u002B'} {/* 追加ボタン */}
                    </button>
                </div>

                {loading ? (
                    <p>loading...</p>
                ) : (
                    <ul>
                        {todoList &&
                            Object.entries(todoList).map(([, value], index) => {
                                // TODO: 各TODOに機能を持たせる
                                return <li key={index}>{value.title}</li>;
                            })}
                    </ul>
                )}
            </main>

            <Footer />
        </div>
    );
}
